<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yl.common.dao.SysLogMapper" >
  <resultMap id="BaseResultMap" type="com.yl.common.pojo.SysLog" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="operate_user" property="operateUser" jdbcType="VARCHAR" />
    <result column="clazz_name" property="clazzName" jdbcType="VARCHAR" />
    <result column="clazzSimple_name" property="clazzsimpleName" jdbcType="VARCHAR" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="modular" property="modular" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="log_content" property="logContent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, operate_user, clazz_name, clazzSimple_name, method_name, modular, type, log_content, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yl.common.pojo.SysLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yl.common.pojo.SysLogExample" >
    delete from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yl.common.pojo.SysLog" >
    <selectKey keyProperty="id" resultType="java.lang.String" order="BEFORE">
      select replace(uuid(),'-','') from dual
    </selectKey>
    insert into sys_log (id, operate_user, clazz_name, 
      clazzSimple_name, method_name, modular, 
      type, log_content, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{operateUser,jdbcType=VARCHAR}, #{clazzName,jdbcType=VARCHAR}, 
      #{clazzsimpleName,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, #{modular,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{logContent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yl.common.pojo.SysLog" >
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="operateUser != null" >
        operate_user,
      </if>
      <if test="clazzName != null" >
        clazz_name,
      </if>
      <if test="clazzsimpleName != null" >
        clazzSimple_name,
      </if>
      <if test="methodName != null" >
        method_name,
      </if>
      <if test="modular != null" >
        modular,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="logContent != null" >
        log_content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="operateUser != null" >
        #{operateUser,jdbcType=VARCHAR},
      </if>
      <if test="clazzName != null" >
        #{clazzName,jdbcType=VARCHAR},
      </if>
      <if test="clazzsimpleName != null" >
        #{clazzsimpleName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="modular != null" >
        #{modular,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null" >
        #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yl.common.pojo.SysLogExample" resultType="java.lang.Integer" >
    select count(*) from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.operateUser != null" >
        operate_user = #{record.operateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.clazzName != null" >
        clazz_name = #{record.clazzName,jdbcType=VARCHAR},
      </if>
      <if test="record.clazzsimpleName != null" >
        clazzSimple_name = #{record.clazzsimpleName,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null" >
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.modular != null" >
        modular = #{record.modular,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.logContent != null" >
        log_content = #{record.logContent,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_log
    set id = #{record.id,jdbcType=VARCHAR},
      operate_user = #{record.operateUser,jdbcType=VARCHAR},
      clazz_name = #{record.clazzName,jdbcType=VARCHAR},
      clazzSimple_name = #{record.clazzsimpleName,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      modular = #{record.modular,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      log_content = #{record.logContent,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yl.common.pojo.SysLog" >
    update sys_log
    <set >
      <if test="operateUser != null" >
        operate_user = #{operateUser,jdbcType=VARCHAR},
      </if>
      <if test="clazzName != null" >
        clazz_name = #{clazzName,jdbcType=VARCHAR},
      </if>
      <if test="clazzsimpleName != null" >
        clazzSimple_name = #{clazzsimpleName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="modular != null" >
        modular = #{modular,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null" >
        log_content = #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yl.common.pojo.SysLog" >
    update sys_log
    set operate_user = #{operateUser,jdbcType=VARCHAR},
      clazz_name = #{clazzName,jdbcType=VARCHAR},
      clazzSimple_name = #{clazzsimpleName,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      modular = #{modular,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      log_content = #{logContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>